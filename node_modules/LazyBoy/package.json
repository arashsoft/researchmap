{
  "author": {
    "name": "Garren Smith",
    "email": "garren.smith@gmail.com",
    "url": "www.garrensmith.com"
  },
  "name": "LazyBoy",
  "description": "A object document mapper for couchdb",
  "keywords": [
    "Couchdb",
    "db",
    "ORM",
    "ODM",
    "couch"
  ],
  "version": "0.1.14",
  "homepage": "http://garrensmith.com/LazyBoy",
  "repository": {
    "type": "git",
    "url": "git://github.com/garrensmith/lazyboy.git"
  },
  "main": "lib/index.js",
  "engines": {
    "node": ">0.4.0"
  },
  "scripts": {
    "test": "make test"
  },
  "dependencies": {
    "cradle": ">=0.5.5",
    "async": ">=0.1.9",
    "validator": ">=0.3.4"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "readme": "LazyBoy Object Modeller\n=======================\n[![Build Status](https://secure.travis-ci.org/garrensmith/LazyBoy.png)](http://travis-ci.org/garrensmith/LazyBoy)\n\n# Oh my word... What have you done?\n\nLazyBoy makes it easier to build applications with Couchdb. It removes the repeatable cruft and makes working with Couchdb as fun as it should be.\n\n# 4 easy steps to installation\n\n1) Download\n\n    npm install lazyboy\n\n2) Connect to database\n\n    var Model = require('lazyboy')\n    Model.create_connection(\"my_database\");\n\n3) Define a model\n\n    Model.define('User', {\n      name: String\n      surname: {type: String, default: \"Rambo\"}\n    })\n\n4) Read the docs: [http://garrensmith.com/LazyBoy](http://garrensmith.com/LazyBoy)\n\n# How do I use this it?\n\nBelow is a quick cheatsheet but the docs can be found at [http://garrensmith.com/LazyBoy](http://garrensmith.com/LazyBoy)\n\n## Defining a model\n    var Model = require('LazyBoy');\n\n    Model.define('User', {\n      name: String\n      surname: {type: String, default: \"Rambo\"}\n    })\n\n## Creating and saving a model\n    \n    var user = Model.create('User', {name: \"John\", surname: \"Rambo\"});\n\n    user.save(function (err, saved_user) {\n        // .. do some other stuff here\n    })\n\n## Finding a model\n### Finding by Id\n    var user_id = \"123456\";\n\n    var User = Model('User');\n    User.find(user_id, function (err, user) {\n        // .. do something with the user\n    })\n\n### Find all or by criteria \n\n    var User = Model('User');\n    User.all(function (err, users) {\n        // .. do something with the user\n    })\n\n    var User = Model('User');\n    User.where(\"name\",\"Ben\", function (err, users) {\n        // .. do something with the users\n    })\n\n### Find first by criteria\n\n    var User = Model('User');\n    User.findFirst('name', 'Ben', function (err, user){\n      // .. do something with the user\n    })\n\n## Custom View\n    var Band = Model.define(\"Band\",{rank: Number, name: String});\n\n    Band.addView('ByRankAndName',{ \n      map: function (doc) {\n        if (doc.model_type === 'Band') {\n          emit([doc.rank, doc.name],1);\n        }\n      }\n    });\n\n    Band.view('ByRankAndName')\n      .startkey([2, \"Incubus\"])\n      .endkey([3, {}])\n      .limit(10)\n      .skip(3, function (err, bands) {\n       // will only execute the chain when a function has a callback passed to it\n    });\n\n## Logging\nLogging has been disabled for now.\n\n#What needs doing?\n\n* Define model_type field stored in db\n* Multiple db support\n* Improved logging\n\n#Changelog\n* 16 May 2013 - Add findFirst\n* 24 October 2012 - Add Chainable Api\n* 25 July 2012 - Bug fixes, change tests to mocha\n* 20 July 2012 - Added toJSON function on Document\n* 11 Nov 2011 - Added Validations using node-validator\n* 13 Sep 2011 - Add Id to serialised model\n* 11 Sep 2011 - Add Before And After Remove Callbacks (Donnie Hedin)\n* 17 Aug 2011 - Add support for custom methods \n\n#Contributors\n* Sven Bergstr√∂m (underscorediscovery)\n* Donnie Hedin (sofa420)\n* 8bitDesigner\n\n",
  "readmeFilename": "readme.md",
  "_id": "LazyBoy@0.1.14",
  "dist": {
    "shasum": "a79bb9c81be01b51b8e05e5a762936c083e7b08d"
  },
  "_from": "LazyBoy@",
  "_resolved": "https://registry.npmjs.org/LazyBoy/-/LazyBoy-0.1.14.tgz"
}
